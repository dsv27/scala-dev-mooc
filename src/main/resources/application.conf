# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.

akka {

  # Logger config for Akka internals and classic actors, the new API relies
  # directly on SLF4J and your config for the logger backend.

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.Logging$DefaultLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  logging-filter = "akka.event.DefaultLoggingFilter"

  actor {
    provider = "local"

    guardian-supervisor-strategy = "akka.actor.DefaultSupervisorStrategy"

    default-dispatcher {

      type = "Dispatcher"

      executor = "default-executor"

      default-executor {
              fallback = "fork-join-executor"
      }

      # This will be used if you have set "executor = "fork-join-executor""
            # Underlying thread pool implementation is java.util.concurrent.ForkJoinPool
      fork-join-executor {
              # Min number of threads to cap factor-based parallelism number to
              parallelism-min = 8

              # The parallelism factor is used to determine thread pool size using the
              # following formula: ceil(available processors * factor). Resulting size
              # is then bounded by the parallelism-min and parallelism-max values.
              parallelism-factor = 1.0

              # Max number of threads to cap factor-based parallelism number to
              parallelism-max = 64

              # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
              # like peeking mode which "pop".
              task-peeking-mode = "FIFO"
      }
      # Throughput for default Dispatcher
      throughput = 5
    }
  }

}

abiturient-api {
    host = "localhost"
    port = 8080
    base-api-uri="/api/v1/abiturient/"
}

admission-plan-api {
    host = "localhost"
    port = 8081
    base-api-uri="/api/v1/admissionplan/"
}
